name: Build container

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_aarch64:
    runs-on: ubuntu-latest
    container: messense/rust-musl-cross:aarch64-musl
    steps:
      - uses: actions/checkout@v4
      - name: Set Github sha short  
        run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV 
      - name: Build
        run: cargo build --release
      - name: Rename bin files
        run: |
          mv target/aarch64-unknown-linux-musl/release/speedupdateserver target/release/speedupdateserver-${{ env.GITHUB_SHA_SHORT }}_linux_arm64
          mv target/aarch64-unknown-linux-musl/release/speedupdate target/release/speedupdate-${{ env.GITHUB_SHA_SHORT }}_linux_arm64
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speedupdate-${{ env.GITHUB_SHA_SHORT }}_linux_arm64
          if-no-files-found: error
          path: |
            target/release/speedupdateserver-*
            target/release/speedupdate-*

  build_x86_64:
    runs-on: ubuntu-latest
    container: messense/rust-musl-cross:x86_64-musl
    steps:
      - uses: actions/checkout@v4
      - name: Set Github sha short
        run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV 
      - name: Build
        run: cargo build --release
      - name: Rename bin files
        run: |
          mv target/aarch64-unknown-linux-musl/release/speedupdateserver target/release/speedupdateserver-${{ env.GITHUB_SHA_SHORT }}_linux_amd64
          mv target/aarch64-unknown-linux-musl/release/speedupdate target/release/speedupdate-${{ env.GITHUB_SHA_SHORT }}_linux_amd64
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speedupdate-${{ env.GITHUB_SHA_SHORT }}_linux_amd64
          if-no-files-found: error
          path: |
            target/release/speedupdateserver-*
            target/release/speedupdate-*

  build-container:
    runs-on: ubuntu-22.04
    needs: [build_aarch64, build_x86_64]
    steps:
      - uses: actions/checkout@v4
      - name: Set Github sha short  
        run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV 
      - uses: actions/download-artifact@v4
        with:
          pattern: speedupdate-*
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build container
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          push: true
          tags: ludea/speedupdate:latest
          platforms: linux/amd64, linux/arm64
          build-args: |
            VERSION=${{ env.GITHUB_SHA_SHORT }} 
